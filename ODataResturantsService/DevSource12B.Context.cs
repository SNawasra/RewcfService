//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ODataResturantsService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Core.Objects.DataClasses;
    using System.Data.Entity.Infrastructure;
    using System.Linq;

    public partial class devSource12BEntities : DbContext
    {
        public devSource12BEntities()
            : base("name=devSource12BEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AccountBase> AccountBases { get; set; }
        public DbSet<AccountExtB> AccountExtBs { get; set; }
        public DbSet<Announcement> Announcements { get; set; }
        public DbSet<Attachment> Attachments { get; set; }
        public DbSet<AttachmentsAWS3> AttachmentsAWS3 { get; set; }
        public DbSet<Budget> Budgets { get; set; }
        public DbSet<BudgetLocation> BudgetLocations { get; set; }
        public DbSet<CateringCategory> CateringCategories { get; set; }
        public DbSet<CateringEvent> CateringEvents { get; set; }
        public DbSet<CateringEventDetail> CateringEventDetails { get; set; }
        public DbSet<CateringEventSegment> CateringEventSegments { get; set; }
        public DbSet<CateringEventTime> CateringEventTimes { get; set; }
        public DbSet<CateringEventType> CateringEventTypes { get; set; }
        public DbSet<CateringItemType> CateringItemTypes { get; set; }
        public DbSet<CateringMenu> CateringMenus { get; set; }
        public DbSet<CateringMenuItem> CateringMenuItems { get; set; }
        public DbSet<CateringPaymentExpected> CateringPaymentExpecteds { get; set; }
        public DbSet<CateringSetting> CateringSettings { get; set; }
        public DbSet<CateringSource> CateringSources { get; set; }
        public DbSet<CateringTime> CateringTimes { get; set; }
        public DbSet<CommissaryCategory> CommissaryCategories { get; set; }
        public DbSet<CommissaryDay> CommissaryDays { get; set; }
        public DbSet<CommissaryLocationDay> CommissaryLocationDays { get; set; }
        public DbSet<CompanyLocation> CompanyLocations { get; set; }
        public DbSet<ContactBase> ContactBases { get; set; }
        public DbSet<ContactExtB> ContactExtBs { get; set; }
        public DbSet<Controller> Controllers { get; set; }
        public DbSet<CustomerAddressBase> CustomerAddressBases { get; set; }
        public DbSet<CustomerAddressExtensionBase> CustomerAddressExtensionBases { get; set; }
        public DbSet<Deposit> Deposits { get; set; }
        public DbSet<dm_attribute1> dm_attribute1 { get; set; }
        public DbSet<dm_attribute2> dm_attribute2 { get; set; }
        public DbSet<dm_autoid> dm_autoid { get; set; }
        public DbSet<dm_bank> dm_bank { get; set; }
        public DbSet<dm_bankActivity> dm_bankActivity { get; set; }
        public DbSet<dm_bankRecDetail> dm_bankRecDetail { get; set; }
        public DbSet<dm_bankReconciliation> dm_bankReconciliation { get; set; }
        public DbSet<dm_bankRules> dm_bankRules { get; set; }
        public DbSet<dm_cateringEventDetail> dm_cateringEventDetail { get; set; }
        public DbSet<dm_cateringItem> dm_cateringItem { get; set; }
        public DbSet<dm_cateringItemCategory> dm_cateringItemCategory { get; set; }
        public DbSet<dm_CheckRun> dm_CheckRun { get; set; }
        public DbSet<dm_CheckRunInvoice> dm_CheckRunInvoice { get; set; }
        public DbSet<dm_dailySalesSummary> dm_dailySalesSummary { get; set; }
        public DbSet<dm_employee> dm_employee { get; set; }
        public DbSet<dm_employeeAvailability> dm_employeeAvailability { get; set; }
        public DbSet<dm_employeeJobTitle> dm_employeeJobTitle { get; set; }
        public DbSet<dm_employeeNote> dm_employeeNote { get; set; }
        public DbSet<dm_EmployeeNoteReason> dm_EmployeeNoteReason { get; set; }
        public DbSet<dm_eventEmployeeDetail> dm_eventEmployeeDetail { get; set; }
        public DbSet<dm_fiscalDate> dm_fiscalDate { get; set; }
        public DbSet<dm_fiscalPeriodSetup> dm_fiscalPeriodSetup { get; set; }
        public DbSet<dm_franchisee> dm_franchisee { get; set; }
        public DbSet<dm_franchiseeContact> dm_franchiseeContact { get; set; }
        public DbSet<dm_franchiseeDailySales> dm_franchiseeDailySales { get; set; }
        public DbSet<dm_franchiseeLocation> dm_franchiseeLocation { get; set; }
        public DbSet<dm_franchiseeReviews> dm_franchiseeReviews { get; set; }
        public DbSet<dm_franchisingFee> dm_franchisingFee { get; set; }
        public DbSet<dm_glAccount> dm_glAccount { get; set; }
        public DbSet<dm_gltype> dm_gltype { get; set; }
        public DbSet<dm_ingredient> dm_ingredient { get; set; }
        public DbSet<dm_item> dm_item { get; set; }
        public DbSet<dm_itemCategory1> dm_itemCategory1 { get; set; }
        public DbSet<dm_itemCategory2> dm_itemCategory2 { get; set; }
        public DbSet<dm_itemCategory3> dm_itemCategory3 { get; set; }
        public DbSet<dm_itemLocation> dm_itemLocation { get; set; }
        public DbSet<dm_jobResponsibility> dm_jobResponsibility { get; set; }
        public DbSet<dm_jobTitle> dm_jobTitle { get; set; }
        public DbSet<dm_jobTitleResponsibility> dm_jobTitleResponsibility { get; set; }
        public DbSet<dm_labor> dm_labor { get; set; }
        public DbSet<dm_legalEntity> dm_legalEntity { get; set; }
        public DbSet<dm_location> dm_location { get; set; }
        public DbSet<dm_locationGroup> dm_locationGroup { get; set; }
        public DbSet<dm_locationGroupDetail> dm_locationGroupDetail { get; set; }
        public DbSet<dm_menuItem> dm_menuItem { get; set; }
        public DbSet<dm_menuItemCategory1> dm_menuItemCategory1 { get; set; }
        public DbSet<dm_menuItemCategory2> dm_menuItemCategory2 { get; set; }
        public DbSet<dm_menuItemCategory3> dm_menuItemCategory3 { get; set; }
        public DbSet<dm_menuItemLink> dm_menuItemLink { get; set; }
        public DbSet<dm_paycode> dm_paycode { get; set; }
        public DbSet<dm_paymentTerm> dm_paymentTerm { get; set; }
        public DbSet<dm_paymentTypeAccount> dm_paymentTypeAccount { get; set; }
        public DbSet<dm_POSEmployee> dm_POSEmployee { get; set; }
        public DbSet<dm_preferences> dm_preferences { get; set; }
        public DbSet<dm_reportDefaults> dm_reportDefaults { get; set; }
        public DbSet<dm_reportFavorites> dm_reportFavorites { get; set; }
        public DbSet<dm_sales> dm_sales { get; set; }
        public DbSet<dm_salesAccount> dm_salesAccount { get; set; }
        public DbSet<dm_salesCategory> dm_salesCategory { get; set; }
        public DbSet<dm_salesDetail> dm_salesDetail { get; set; }
        public DbSet<dm_salesPayment> dm_salesPayment { get; set; }
        public DbSet<dm_serviceType> dm_serviceType { get; set; }
        public DbSet<dm_transaction> dm_transaction { get; set; }
        public DbSet<dm_transactionApply> dm_transactionApply { get; set; }
        public DbSet<dm_transactionDetail> dm_transactionDetail { get; set; }
        public DbSet<dm_unitOfMeasure> dm_unitOfMeasure { get; set; }
        public DbSet<dm_UserActivity> dm_UserActivity { get; set; }
        public DbSet<dm_VendorItem> dm_VendorItem { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<EmployeeJobResponsibility> EmployeeJobResponsibilities { get; set; }
        public DbSet<EmployeeJobTitle> EmployeeJobTitles { get; set; }
        public DbSet<EmployeeMerge> EmployeeMerges { get; set; }
        public DbSet<Feature> Features { get; set; }
        public DbSet<FoodType> FoodTypes { get; set; }
        public DbSet<Forecast> Forecasts { get; set; }
        public DbSet<ImportLog> ImportLogs { get; set; }
        public DbSet<ImportMapping> ImportMappings { get; set; }
        public DbSet<ImportType> ImportTypes { get; set; }
        public DbSet<JobTitle> JobTitles { get; set; }
        public DbSet<Labor> Labors { get; set; }
        public DbSet<LocationCategory> LocationCategories { get; set; }
        public DbSet<LocationPOSGroup> LocationPOSGroups { get; set; }
        public DbSet<LocationType> LocationTypes { get; set; }
        public DbSet<Note> Notes { get; set; }
        public DbSet<Paidout> Paidouts { get; set; }
        public DbSet<PaidOutType> PaidOutTypes { get; set; }
        public DbSet<POSSystem> POSSystems { get; set; }
        public DbSet<PriceLevel> PriceLevels { get; set; }
        public DbSet<PriceLevelFeature> PriceLevelFeatures { get; set; }
        public DbSet<processedAttachment> processedAttachments { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<RoleTemplate> RoleTemplates { get; set; }
        public DbSet<RoleTemplateRole> RoleTemplateRoles { get; set; }
        public DbSet<Room> Rooms { get; set; }
        public DbSet<Sale> Sales { get; set; }
        public DbSet<SalesDetail> SalesDetails { get; set; }
        public DbSet<SalesPayment> SalesPayments { get; set; }
        public DbSet<SavedMapping> SavedMappings { get; set; }
        public DbSet<SavedView> SavedViews { get; set; }
        public DbSet<SavedViewDefault> SavedViewDefaults { get; set; }
        public DbSet<Schedule> Schedules { get; set; }
        public DbSet<ScheduleEvent> ScheduleEvents { get; set; }
        public DbSet<SetupSection> SetupSections { get; set; }
        public DbSet<SetupStep> SetupSteps { get; set; }
        public DbSet<ShiftTemplate> ShiftTemplates { get; set; }
        public DbSet<Site> Sites { get; set; }
        public DbSet<SQLScript> SQLScripts { get; set; }
        public DbSet<StringMapBase> StringMapBases { get; set; }
        public DbSet<SystemUserBase> SystemUserBases { get; set; }
        public DbSet<Task> Tasks { get; set; }
        public DbSet<TeamBase> TeamBases { get; set; }
        public DbSet<Theme> Themes { get; set; }
        public DbSet<Transaction> Transactions { get; set; }
        public DbSet<TransactionAuditLog> TransactionAuditLogs { get; set; }
        public DbSet<TransactionDetail> TransactionDetails { get; set; }
        public DbSet<TransactionDetailAuditLog> TransactionDetailAuditLogs { get; set; }
        public DbSet<UploadAttachment> UploadAttachments { get; set; }
        public DbSet<UserLocation> UserLocations { get; set; }
        public DbSet<UserRole> UserRoles { get; set; }
        public DbSet<VendorGroup> VendorGroups { get; set; }
        public DbSet<VERSION> VERSIONS { get; set; }
        public DbSet<Account> Accounts { get; set; }
        public DbSet<Contact> Contacts { get; set; }
        public DbSet<dm_attribute1extensionbase> dm_attribute1extensionbase { get; set; }
        public DbSet<dm_attribute2extensionbase> dm_attribute2extensionbase { get; set; }
        public DbSet<dm_autoidextensionbase> dm_autoidextensionbase { get; set; }
        public DbSet<dm_bankActivityextensionbase> dm_bankActivityextensionbase { get; set; }
        public DbSet<dm_bankextensionbase> dm_bankextensionbase { get; set; }
        public DbSet<dm_bankReconciliationextensionbase> dm_bankReconciliationextensionbase { get; set; }
        public DbSet<dm_bankRulesextensionbase> dm_bankRulesextensionbase { get; set; }
        public DbSet<dm_cateringEventDetailextensionbase> dm_cateringEventDetailextensionbase { get; set; }
        public DbSet<dm_cateringItemCategoryextensionbase> dm_cateringItemCategoryextensionbase { get; set; }
        public DbSet<dm_cateringItemextensionbase> dm_cateringItemextensionbase { get; set; }
        public DbSet<dm_dailySalesSummaryextensionbase> dm_dailySalesSummaryextensionbase { get; set; }
        public DbSet<dm_employeeextensionbase> dm_employeeextensionbase { get; set; }
        public DbSet<dm_employeeJobTitleextensionbase> dm_employeeJobTitleextensionbase { get; set; }
        public DbSet<dm_employeeNoteextensionbase> dm_employeeNoteextensionbase { get; set; }
        public DbSet<dm_EmployeeNoteReasonextensionbase> dm_EmployeeNoteReasonextensionbase { get; set; }
        public DbSet<dm_eventEmployeeDetailextensionbase> dm_eventEmployeeDetailextensionbase { get; set; }
        public DbSet<dm_fiscalDateextensionbase> dm_fiscalDateextensionbase { get; set; }
        public DbSet<dm_fiscalPeriodSetupextensionbase> dm_fiscalPeriodSetupextensionbase { get; set; }
        public DbSet<dm_franchiseeContactextensionbase> dm_franchiseeContactextensionbase { get; set; }
        public DbSet<dm_franchiseeDailySalesextensionbase> dm_franchiseeDailySalesextensionbase { get; set; }
        public DbSet<dm_franchiseeextensionbase> dm_franchiseeextensionbase { get; set; }
        public DbSet<dm_franchiseeLocationextensionbase> dm_franchiseeLocationextensionbase { get; set; }
        public DbSet<dm_franchiseeReviewsextensionbase> dm_franchiseeReviewsextensionbase { get; set; }
        public DbSet<dm_franchisingFeeextensionbase> dm_franchisingFeeextensionbase { get; set; }
        public DbSet<dm_glAccountextensionbase> dm_glAccountextensionbase { get; set; }
        public DbSet<dm_gltypeextensionbase> dm_gltypeextensionbase { get; set; }
        public DbSet<dm_ingredientextensionbase> dm_ingredientextensionbase { get; set; }
        public DbSet<dm_itemCategory1extensionbase> dm_itemCategory1extensionbase { get; set; }
        public DbSet<dm_itemCategory2extensionbase> dm_itemCategory2extensionbase { get; set; }
        public DbSet<dm_itemCategory3extensionbase> dm_itemCategory3extensionbase { get; set; }
        public DbSet<dm_itemextensionbase> dm_itemextensionbase { get; set; }
        public DbSet<dm_itemLocationextensionbase> dm_itemLocationextensionbase { get; set; }
        public DbSet<dm_jobTitleextensionbase> dm_jobTitleextensionbase { get; set; }
        public DbSet<dm_laborextensionbase> dm_laborextensionbase { get; set; }
        public DbSet<dm_legalEntityextensionbase> dm_legalEntityextensionbase { get; set; }
        public DbSet<dm_locationextensionbase> dm_locationextensionbase { get; set; }
        public DbSet<dm_locationGroupDetailextensionbase> dm_locationGroupDetailextensionbase { get; set; }
        public DbSet<dm_locationGroupextensionbase> dm_locationGroupextensionbase { get; set; }
        public DbSet<dm_menuItemCategory1extensionbase> dm_menuItemCategory1extensionbase { get; set; }
        public DbSet<dm_menuItemCategory2extensionbase> dm_menuItemCategory2extensionbase { get; set; }
        public DbSet<dm_menuItemCategory3extensionbase> dm_menuItemCategory3extensionbase { get; set; }
        public DbSet<dm_menuItemextensionbase> dm_menuItemextensionbase { get; set; }
        public DbSet<dm_menuItemLinkextensionbase> dm_menuItemLinkextensionbase { get; set; }
        public DbSet<dm_paycodeextensionbase> dm_paycodeextensionbase { get; set; }
        public DbSet<dm_paymentTermextensionbase> dm_paymentTermextensionbase { get; set; }
        public DbSet<dm_paymentTypeAccountextensionbase> dm_paymentTypeAccountextensionbase { get; set; }
        public DbSet<dm_POSEmployeeextensionbase> dm_POSEmployeeextensionbase { get; set; }
        public DbSet<dm_preferencesextensionbase> dm_preferencesextensionbase { get; set; }
        public DbSet<dm_reportDefaultsextensionbase> dm_reportDefaultsextensionbase { get; set; }
        public DbSet<dm_reportFavoritesextensionbase> dm_reportFavoritesextensionbase { get; set; }
        public DbSet<dm_salesAccountextensionbase> dm_salesAccountextensionbase { get; set; }
        public DbSet<dm_salesCategoryextensionbase> dm_salesCategoryextensionbase { get; set; }
        public DbSet<dm_salesDetailextensionbase> dm_salesDetailextensionbase { get; set; }
        public DbSet<dm_salesextensionbase> dm_salesextensionbase { get; set; }
        public DbSet<dm_salesPaymentextensionbase> dm_salesPaymentextensionbase { get; set; }
        public DbSet<dm_serviceTypeextensionbase> dm_serviceTypeextensionbase { get; set; }
        public DbSet<dm_transactionApplyextensionbase> dm_transactionApplyextensionbase { get; set; }
        public DbSet<dm_transactionDetailextensionbase> dm_transactionDetailextensionbase { get; set; }
        public DbSet<dm_transactionextensionbase> dm_transactionextensionbase { get; set; }
        public DbSet<dm_unitOfMeasureextensionbase> dm_unitOfMeasureextensionbase { get; set; }
        public DbSet<dm_UserActivityextensionbase> dm_UserActivityextensionbase { get; set; }
        public DbSet<dm_VendorItemextensionbase> dm_VendorItemextensionbase { get; set; }
        public DbSet<ItemMultiplier> ItemMultipliers { get; set; }
        public DbSet<OperationalReportsCategoryNetSale> OperationalReportsCategoryNetSales { get; set; }
        public DbSet<R365_RFYI_ORG> R365_RFYI_ORG { get; set; }
        public DbSet<R365144View> R365144View { get; set; }
        public DbSet<R365R_RFYIAccounts> R365R_RFYIAccounts { get; set; }
        public DbSet<R365ReportTrxDetailA> R365ReportTrxDetailA { get; set; }
        public DbSet<RecipePortionCost> RecipePortionCosts { get; set; }
        public DbSet<systemUserAndEmployee> systemUserAndEmployees { get; set; }
        public DbSet<ViewTEST> ViewTESTs { get; set; }
        public DbSet<vUser> vUsers { get; set; }
    
        [EdmFunction("devSource12BEntities", "fn_GetFormatStrings")]
        public virtual IQueryable<fn_GetFormatStrings_Result> fn_GetFormatStrings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetFormatStrings_Result>("[devSource12BEntities].[fn_GetFormatStrings]()");
        }
    
        [EdmFunction("devSource12BEntities", "fn_GetGuidsFromString")]
        public virtual IQueryable<fn_GetGuidsFromString_Result> fn_GetGuidsFromString(string idsString)
        {
            var idsStringParameter = idsString != null ?
                new ObjectParameter("idsString", idsString) :
                new ObjectParameter("idsString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetGuidsFromString_Result>("[devSource12BEntities].[fn_GetGuidsFromString](@idsString)", idsStringParameter);
        }
    
        [EdmFunction("devSource12BEntities", "fn_GetUsersFiscalPeriodAndYear")]
        public virtual IQueryable<fn_GetUsersFiscalPeriodAndYear_Result> fn_GetUsersFiscalPeriodAndYear(Nullable<System.DateTime> fiscalCalendarStart, Nullable<int> displayCode, Nullable<int> fiscalPeriodsPerYear, Nullable<System.DateTime> nowUTC)
        {
            var fiscalCalendarStartParameter = fiscalCalendarStart.HasValue ?
                new ObjectParameter("fiscalCalendarStart", fiscalCalendarStart) :
                new ObjectParameter("fiscalCalendarStart", typeof(System.DateTime));
    
            var displayCodeParameter = displayCode.HasValue ?
                new ObjectParameter("displayCode", displayCode) :
                new ObjectParameter("displayCode", typeof(int));
    
            var fiscalPeriodsPerYearParameter = fiscalPeriodsPerYear.HasValue ?
                new ObjectParameter("fiscalPeriodsPerYear", fiscalPeriodsPerYear) :
                new ObjectParameter("fiscalPeriodsPerYear", typeof(int));
    
            var nowUTCParameter = nowUTC.HasValue ?
                new ObjectParameter("nowUTC", nowUTC) :
                new ObjectParameter("nowUTC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetUsersFiscalPeriodAndYear_Result>("[devSource12BEntities].[fn_GetUsersFiscalPeriodAndYear](@fiscalCalendarStart, @displayCode, @fiscalPeriodsPerYear, @nowUTC)", fiscalCalendarStartParameter, displayCodeParameter, fiscalPeriodsPerYearParameter, nowUTCParameter);
        }
    
        [EdmFunction("devSource12BEntities", "fn_LocationFilter")]
        public virtual IQueryable<fn_LocationFilter_Result> fn_LocationFilter(string filterBy, string filter, Nullable<System.DateTime> asOf, string user)
        {
            var filterByParameter = filterBy != null ?
                new ObjectParameter("FilterBy", filterBy) :
                new ObjectParameter("FilterBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var asOfParameter = asOf.HasValue ?
                new ObjectParameter("AsOf", asOf) :
                new ObjectParameter("AsOf", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_LocationFilter_Result>("[devSource12BEntities].[fn_LocationFilter](@FilterBy, @Filter, @AsOf, @User)", filterByParameter, filterParameter, asOfParameter, userParameter);
        }
    
        [EdmFunction("devSource12BEntities", "R365fn_CommissaryLocationSecurity")]
        public virtual IQueryable<R365fn_CommissaryLocationSecurity_Result> R365fn_CommissaryLocationSecurity(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<R365fn_CommissaryLocationSecurity_Result>("[devSource12BEntities].[R365fn_CommissaryLocationSecurity](@User)", userParameter);
        }
    
        [EdmFunction("devSource12BEntities", "R365fn_LocationSecurity")]
        public virtual IQueryable<R365fn_LocationSecurity_Result> R365fn_LocationSecurity(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<R365fn_LocationSecurity_Result>("[devSource12BEntities].[R365fn_LocationSecurity](@User)", userParameter);
        }
    
        [EdmFunction("devSource12BEntities", "R365fn_LocationSecurity2")]
        public virtual IQueryable<R365fn_LocationSecurity2_Result> R365fn_LocationSecurity2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<R365fn_LocationSecurity2_Result>("[devSource12BEntities].[R365fn_LocationSecurity2]()");
        }
    
        [EdmFunction("devSource12BEntities", "R365fn_LocationSecurityLogin")]
        public virtual IQueryable<R365fn_LocationSecurityLogin_Result> R365fn_LocationSecurityLogin(string login)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<R365fn_LocationSecurityLogin_Result>("[devSource12BEntities].[R365fn_LocationSecurityLogin](@Login)", loginParameter);
        }
    
        [EdmFunction("devSource12BEntities", "R365fn_SplitString")]
        public virtual IQueryable<R365fn_SplitString_Result> R365fn_SplitString(string @string, string delimeter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimeterParameter = delimeter != null ?
                new ObjectParameter("Delimeter", delimeter) :
                new ObjectParameter("Delimeter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<R365fn_SplitString_Result>("[devSource12BEntities].[R365fn_SplitString](@String, @Delimeter)", stringParameter, delimeterParameter);
        }
    }
}
